package com.prathameshShubham.bharatBijliCorporation.services;

import com.itextpdf.kernel.colors.DeviceRgb;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.borders.Border;
import com.itextpdf.layout.borders.SolidBorder;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import com.prathameshShubham.bharatBijliCorporation.models.Invoice;
import org.springframework.stereotype.Service;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.text.NumberFormat;
import java.time.format.DateTimeFormatter;
import java.util.Locale;

@Service
public class PDFService {


    public byte[] generatePDF(Invoice invoice) throws IOException {
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(new Locale("en", "IN"));

        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        PdfWriter pdfWriter = new PdfWriter(byteArrayOutputStream);
        PdfDocument pdfDocument = new PdfDocument(pdfWriter);
        Document document = new Document(pdfDocument);

        Paragraph companyName = new Paragraph("Bharat Bijili Corporation")
                .setTextAlignment(TextAlignment.LEFT)
                .setFontSize(16)
                .setBold();
        document.add(companyName);

        Paragraph invoiceTitle = new Paragraph("INVOICE")
                .setTextAlignment(TextAlignment.CENTER)
                .setFontSize(20)
                .setBold()
                .setMarginBottom(10);
        document.add(invoiceTitle);

        // Add a space
        document.add(new Paragraph("\n"));

        // Customer and Invoice Information Section
        Table customerInfoTable = new Table(UnitValue.createPercentArray(new float[]{2, 4}))
                .setWidth(UnitValue.createPercentValue(100))
                .setMarginBottom(10);

        customerInfoTable.addCell(new Cell().add(new Paragraph("Invoice ID:"))
                .setBorder(Border.NO_BORDER).setBold());
        customerInfoTable.addCell(new Cell().add(new Paragraph(invoice.getId().toString()))
                .setBorder(Border.NO_BORDER));

        customerInfoTable.addCell(new Cell().add(new Paragraph("Customer:"))
                .setBorder(Border.NO_BORDER).setBold());
        customerInfoTable.addCell(new Cell().add(new Paragraph(invoice.getCustomer().getPersonalDetails().getFirstName() + " " + invoice.getCustomer().getPersonalDetails().getLastName()))
                .setBorder(Border.NO_BORDER));

        customerInfoTable.addCell(new Cell().add(new Paragraph("Invoice Status:"))
                .setBorder(Border.NO_BORDER).setBold());
        customerInfoTable.addCell(new Cell().add(new Paragraph(invoice.getInvoiceStatus().toString()))
                .setBorder(Border.NO_BORDER));

        customerInfoTable.addCell(new Cell().add(new Paragraph("Generated By:"))
                .setBorder(Border.NO_BORDER).setBold());
        customerInfoTable.addCell(new Cell().add(new Paragraph(invoice.getGeneratedByEmployee().getPersonalDetails().getFirstName()))
                .setBorder(Border.NO_BORDER));

        document.add(customerInfoTable);

        // Invoice Details Table (with borders)
        Table invoiceTable = new Table(UnitValue.createPercentArray(new float[]{2, 4}))
                .setWidth(UnitValue.createPercentValue(100))
                .setMarginBottom(20);

        // Add headers for invoice details
        invoiceTable.addCell(new Cell().add(new Paragraph("Description"))
                .setBackgroundColor(new DeviceRgb(240, 240, 240))
                .setBold()
                .setTextAlignment(TextAlignment.CENTER)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0), 1)));

        invoiceTable.addCell(new Cell().add(new Paragraph("Details"))
                .setBackgroundColor(new DeviceRgb(240, 240, 240))
                .setBold()
                .setTextAlignment(TextAlignment.CENTER)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0),1)));

        // Add table content
        invoiceTable.addCell(new Cell().add(new Paragraph("Units Consumed"))
                .setTextAlignment(TextAlignment.LEFT)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0), 1)));
        invoiceTable.addCell(new Cell().add(new Paragraph(invoice.getUnitsConsumed().toString()))
                .setTextAlignment(TextAlignment.LEFT)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0), 1)));

        invoiceTable.addCell(new Cell().add(new Paragraph("Tariff"))
                .setTextAlignment(TextAlignment.LEFT)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0), 1)));
        invoiceTable.addCell(new Cell().add(new Paragraph(currencyFormatter.format(invoice.getTariff())))
                .setTextAlignment(TextAlignment.LEFT)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0), 1)));

        invoiceTable.addCell(new Cell().add(new Paragraph("Total Amount"))
                .setTextAlignment(TextAlignment.LEFT)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0), 1)));
        invoiceTable.addCell(new Cell().add(new Paragraph(currencyFormatter.format(invoice.getTariff() * invoice.getUnitsConsumed())))
                .setTextAlignment(TextAlignment.LEFT)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0), 1)));

        invoiceTable.addCell(new Cell().add(new Paragraph("Billing Period"))
                .setTextAlignment(TextAlignment.LEFT)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0), 1)));
        invoiceTable.addCell(new Cell().add(new Paragraph(dateFormatter.format(invoice.getPeriodStartDate()) + " to " + dateFormatter.format(invoice.getPeriodEndDate())))
                .setTextAlignment(TextAlignment.LEFT)
                .setBorder(new SolidBorder(new DeviceRgb(0,0,0), 1)));

        document.add(invoiceTable);

        // Footer Section
        Paragraph footer = new Paragraph("Generated on: " + dateFormatter.format(invoice.getCreatedAt()))
                .setTextAlignment(TextAlignment.LEFT)
                .setFontSize(10)
                .setBold();
        document.add(footer);

        Paragraph dueDate = new Paragraph("Due Date: " + dateFormatter.format(invoice.getDueDate()))
                .setTextAlignment(TextAlignment.LEFT)
                .setFontSize(10);
        document.add(dueDate);

        // Closing the document
        document.close();

        return byteArrayOutputStream.toByteArray();
    }
}
